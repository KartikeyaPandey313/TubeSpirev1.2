# ==============================================================================
# /.github/workflows/lighthouse.yml
#
# This GitHub Actions workflow automates website quality assurance by running
# a Lighthouse CI audit on every push to the 'main' branch. Lighthouse tests
# for performance, accessibility, best practices, and SEO.
#
# If any score falls below the defined thresholds, the build will fail,
# acting as a quality gate to prevent regressions in production.
# ==============================================================================

name: Lighthouse CI Audit

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18
          # The "cache: 'npm'" line has been removed to fix the error.

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Start Flask server
        run: |
          gunicorn --bind 127.0.0.1:8000 -w 1 app:app &
          sleep 5

      - name: Run Lighthouse CI
        id: lhci
        run: |
          lhci autorun \
            --collect.url=http://127.0.0.1:8000/ \
            --upload.target=temporary-public-storage \
            --assert.preset=lighthouse:recommended \
            --assert.assertions.'categories:performance'.minScore=0.9 \
            --assert.assertions.'categories:accessibility'.minScore=1 \
            --assert.assertions.'categories:best-practices'.minScore=1 \
            --assert.assertions.'categories:seo'.minScore=1 || true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Stop Flask server
        if: always()
        run: |
          pkill gunicorn || true

      - name: Upload Lighthouse report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lhci-report
          path: .lighthouseci/

      - name: Check Lighthouse results
        if: steps.lhci.outcome == 'failure'
        run: |
          echo "Lighthouse CI assertions failed. Check the 'lhci-report' artifact for details."
          exit 1
